#BlueJ class context
comment0.params=game\ iAmRed
comment0.target=MyAgent(Connect4Game,\ boolean)
comment0.text=\r\n\ Constructs\ a\ new\ agent,\ giving\ it\ the\ game\ and\ telling\ it\ whether\ it\ is\ Red\ or\ Yellow.\r\n\ \r\n\ @param\ game\ The\ game\ the\ agent\ will\ be\ playing.\r\n\ @param\ iAmRed\ True\ if\ the\ agent\ is\ Red,\ False\ if\ the\ agent\ is\ Yellow.\r\n
comment1.params=
comment1.target=void\ move()
comment1.text=\r\n\ The\ move\ method\ is\ run\ every\ time\ it\ is\ this\ agent's\ turn\ in\ the\ game.\ \ \r\n\ Will\ attempt\ to\ win\ the\ game\ if\ possible,\ then\ block\ if\ possible,\ \r\n\ and\ then\ will\ run\ through\ a\ series\ of\ best\ moves.\ \ If\ all\ else\ fails\r\n\ then\ it\ will\ do\ a\ random\ move.\r\n
comment2.params=columnNumber
comment2.target=void\ moveOnColumn(int)
comment2.text=\r\n\ Drops\ a\ token\ into\ a\ particular\ column\ so\ that\ it\ will\ fall\ to\ the\ bottom\ of\ the\ column.\r\n\ If\ the\ column\ is\ already\ full,\ nothing\ will\ change.\r\n\ \r\n\ @param\ columnNumber\ The\ column\ into\ which\ to\ drop\ the\ token.\r\n
comment3.params=column
comment3.target=int\ getLowestEmptyIndex(Connect4Column)
comment3.text=\r\n\ Returns\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column.\r\n\ \r\n\ @param\ column\ The\ column\ to\ check.\r\n\ @return\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column;\ -1\ if\ the\ column\ is\ already\ full.\r\n
comment4.params=
comment4.target=int\ randomMove()
comment4.text=\r\n\ Returns\ a\ random\ valid\ move.\ If\ your\ agent\ doesn't\ know\ what\ to\ do,\ making\ a\ random\ move\r\n\ can\ allow\ the\ game\ to\ go\ on\ anyway.\r\n\ \r\n\ @return\ a\ random\ valid\ move.\r\n
comment5.params=
comment5.target=int\ stackUp()
comment5.text=\r\n\ Returns\ the\ index\ of\ a\ column\ which\ can\ be\ used\ to\ stack\ on\ top\ of.\r\n\ Used\ for\ strategically\ building\ streaks\ of\ colors.\r\n\ \r\n\ @return\ the\ column\ which\ a\ move\ would\ result\ in\ a\ vertical\ streak.\r\n
comment6.params=
comment6.target=int\ stackSide()
comment6.text=\r\n\ Returns\ the\ index\ of\ a\ column\ which\ can\ be\ used\ to\ stack\ to\ the\ left\ of.\r\n\ Used\ for\ strategically\ building\ streaks\ of\ colors.\r\n\ \r\n\ @return\ the\ column\ which\ a\ move\ would\ result\ in\ a\ horizontal\ streak\r\n
comment7.params=myWin
comment7.target=int\ canWin(boolean)
comment7.text=\r\n\ Returns\ the\ column\ that\ would\ allow\ the\ agent\ to\ win.\ \ Looks\ for\ vertical\ wins\ first\r\n\ then\ for\ wins\ to\ the\ right\ and\ finall\ wins\ to\ the\ left.\r\n\r\n\ @param\ myWin\ true\ if\ the\ win\ being\ checked\ is\ for\ this\ agent,\ false\ if\ the\ win\ being\ checked\ is\ for\ the\ opponent.\r\n\ @return\ the\ column\ that\ would\ allow\ the\ agent\ to\ win.\ \ Returns\ -1\ if\ no\ such\ move\ exists.\r\n
comment8.params=
comment8.target=java.lang.String\ getName()
comment8.text=\r\n\ Returns\ the\ name\ of\ this\ agent.\r\n\r\n\ @return\ the\ agent's\ name\r\n
numComments=9
